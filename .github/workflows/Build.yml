# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will build, test, sign and package a WPF or Windows Forms desktop application
# built on .NET Core.
# To learn how to migrate your existing application to .NET Core,
# refer to https://docs.microsoft.com/en-us/dotnet/desktop-wpf/migration/convert-project-from-net-framework
#
# To configure this workflow:
#
# 1. Configure environment variables
# GitHub sets default environment variables for every workflow run.
# Replace the variables relative to your project in the "env" section below.
#
# 2. Signing
# Generate a signing certificate in the Windows Application
# Packaging Project or add an existing signing certificate to the project.
# Next, use PowerShell to encode the .pfx file using Base64 encoding
# by running the following Powershell script to generate the output string:
#
# $pfx_cert = Get-Content '.\SigningCertificate.pfx' -Encoding Byte
# [System.Convert]::ToBase64String($pfx_cert) | Out-File 'SigningCertificate_Encoded.txt'
#
# Open the output file, SigningCertificate_Encoded.txt, and copy the
# string inside. Then, add the string to the repo as a GitHub secret
# and name it "Base64_Encoded_Pfx."
# For more information on how to configure your signing certificate for
# this workflow, refer to https://github.com/microsoft/github-actions-for-desktop-apps#signing
#
# Finally, add the signing certificate password to the repo as a secret and name it "Pfx_Key".
# See "Build the Windows Application Packaging project" below to see how the secret is used.
#
# For more information on GitHub Actions, refer to https://github.com/features/actions
# For a complete CI/CD sample to get started with GitHub Action workflows for Desktop Applications,
# refer to https://github.com/microsoft/github-actions-for-desktop-apps

name: Publish to Github on tags

permissions:
  contents: write
  
on:  
  push:
    branches: [ "master" ]
    tags:        
      - v*
  pull_request:
    branches: [ "master" ]
      
jobs:
  PublishAndRelease:
    strategy:
      matrix:
        configuration: [Release]
        
    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: XBatteryStatus                         # Replace with your solution name, i.e. MyWpfApp.sln.
      # Test_Project_Path: your-test-project-path                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Install the .NET Core workload
      - name: Install .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.3.1

      - name: Install Windows SDK
        uses: GuillaumeFalourd/setup-windows10-sdk-action@v1.11
        with:
          sdk-version: 22621
          
      - name: Build
        run: dotnet build -c Release
        
      # Execute all unit tests in the solution
      - name: Execute unit tests
        run: dotnet test
        
      - name: Publish Dependency Version
        if: startsWith(github.ref, 'refs/tags/')
        run: dotnet publish -c Release /p:PublishProfile=Dependency.pubxml

      - name: Publish Independent Version
        if: startsWith(github.ref, 'refs/tags/')
        run: dotnet publish -c Release /p:PublishProfile=Independent.pubxml
        
      - name: Copy Bat
        if: startsWith(github.ref, 'refs/tags/')
        run: |
            copy Install/Install.bat XBatteryStatus/bin/Publish/XBatteryStatus_Dependency
            copy Install/Uninstall.bat XBatteryStatus/bin/Publish/XBatteryStatus_Dependency
            copy Install/Install.bat XBatteryStatus/bin/Publish/XBatteryStatus_Independent
            copy Install/Uninstall.bat XBatteryStatus/bin/Publish/XBatteryStatus_Independent
        
      - name: zip Dependency
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          Compress-Archive -Path XBatteryStatus/bin/Publish/XBatteryStatus_Dependency/* -DestinationPath XBatteryStatus_Dependency.zip
          Compress-Archive -Path XBatteryStatus/bin/Publish/XBatteryStatus_Independent/* -DestinationPath XBatteryStatus_Independent.zip

      # Drafts your next Release notes as Pull Requests are merged into "master"
      - name: Release Dependency
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            XBatteryStatus_Dependency.zip
            XBatteryStatus_Independent.zip
